function [fitresult, gof] = createSurfaceFit(XI, YI, ZI, fitFunction)
%createSurfaceFit(XI,YI,ZI)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : XI
%      Y Input : YI
%      Z Output: tp
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 24-Apr-2016 09:57:42

%% defaults
% Some function with 3 required inputs, 1 optional.

% Check number of inputs.
if nargin > 4
  error('myfuns:somefun2:TooManyInputs', ...
    'requires at most 2 optional inputs');
end

% Fill in unset optional values.
if nargin==3
    fitFunction = 'a*x+b*y+c';
else
  switch fitFunction
    case 'linear'
      fitFunction = 'a*x+b*y+c';
    case 'spherical'
      %fitFunction = 'a*x+b*y+c';
    case 'spheroidal' 
      %fitFunction = 'a*x+b*y+c';
  end   
end


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( XI, YI, ZI );

% Set up fittype and options.
ft = fittype(fitFunction, 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Robust = 'LAR';
opts.StartPoint = [0.048000784642056 0.942271270677095 0.846775838750512];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, [xData, yData], zData );
% legend( h, 'untitled fit 1', 'tp vs. XI, YI', 'Location', 'NorthEast' );
% % Label axes
% xlabel XI
% ylabel YI
% zlabel tp
% grid on
% view( -28.3, 4.4 );


